services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NODE_ENV: development

    environment:
      REACT_APP_API_BASE_URL: ${REACT_APP_API_BASE_URL}
      PSQL_URL: ${PSQL_URL}
      PSQL_PASS: ${PSQL_PASS}
      PSQL_USER: ${PSQL_USER}
      PSQL_DB: ${PSQL_DB}
    command: sh -c "serve -s front -l 3000"
    ports:
      - "3000:3000"

    networks:
      - public
  
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      MONGO_ADDRESS: ${MONGO_URL}
      REDIS_ADDRESS: ${REDIS_URL}
      PSQL_ADDRESS: ${PSQL_URL}
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASS}
      POSTGRES_DB: ${PSQL_DB}
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
    networks:
      - public
  postgres:
    container_name: ${PSQL_URL}
    build:
      context: ./postgres
      dockerfile: Dockerfile
    environment: 
      POSTGRES_USER: ${PSQL_USER}
      POSTGRES_PASSWORD: ${PSQL_PASS}
      POSTGRES_DB: ${PSQL_DB}
    command: sh -c "/bin/sh /db/db_config.sh ; sleep 100"
    networks:
      - public
  redis:
    image: redis:7-alpine
    container_name: ${REDIS_URL}
    networks:
      - public

networks:
  public:
    driver: bridge
    ipam:
      config:
        - subnet: 172.19.0.0/16
  private:
    driver: bridge
